name: Wisecow Full CI/CD

on:
  push:
    branches:
      - main

jobs:
  build_push_ssh_deploy:
    runs-on: ubuntu-latest

    steps:
    # 1️⃣ Checkout repository
    - name: Checkout code
      uses: actions/checkout@v4

    # 2️⃣ Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # 3️⃣ Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    # 4️⃣ Build and push Docker image to Docker Hub
    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/wisecow:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/wisecow:${{ github.sha }}

    # 5️⃣ SSH into EC2 and deploy to Kind cluster
    - name: SSH and deploy on EC2 (Kind)
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}   # ✅ Private key directly injected
        script: |
          echo "🚀 Starting Wisecow deployment inside Kind cluster"

          # Ensure Kind and kubectl are configured
          export KUBECONFIG=/home/ubuntu/.kube/config
          kubectl cluster-info || { echo "❌ Kind cluster not found"; exit 1; }

          echo "📦 Pulling latest Docker image"
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/wisecow:latest

          echo "📤 Loading image into Kind cluster"
          kind load docker-image ${{ secrets.DOCKERHUB_USERNAME }}/wisecow:latest --name kind

          echo "🧩 Ensuring cert-manager CRDs"
          kubectl apply --validate=false -f https://github.com/cert-manager/cert-manager/releases/latest/download/cert-manager.crds.yaml

          echo "🔍 Installing cert-manager if missing"
          if ! kubectl get namespace cert-manager >/dev/null 2>&1; then
            kubectl create namespace cert-manager
            helm repo add jetstack https://charts.jetstack.io
            helm repo update
            helm upgrade --install cert-manager jetstack/cert-manager \
              --namespace cert-manager \
              --set installCRDs=true
            kubectl rollout status deployment/cert-manager -n cert-manager
          fi

          echo "⚙️ Applying ClusterIssuer and manifests"
          kubectl apply -f k8s/cluster-issuer.yaml
          kubectl apply -f k8s/

          echo "🔄 Restarting Wisecow deployment"
          kubectl rollout restart deployment wisecow -n default
          kubectl rollout status deployment wisecow -n default

          echo "✅ Wisecow deployed successfully on Kind cluster!"
